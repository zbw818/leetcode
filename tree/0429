/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int> > result;
        queue<Node*>qe;
        if(root!=NULL) qe.push(root);
        while(!qe.empty()){
            int len=qe.size();
            vector<int>tem;
            for(int i=0;i<len;i++){
                Node* node=qe.front();
                qe.pop();
                tem.push_back(node->val);
                for(int j=0;j<node->children.size();j++){
                    if(node->children[j]) qe.push(node->children[j]);
                }
            }
            result.push_back(tem);
        }
        return result;        
    }
};
