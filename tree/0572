/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSametree(TreeNode* p,TreeNode* q){
        if(!p&&!q) return true;
        if(!p||!q) return false;
        if(p->val!=q->val) return false;
        bool flag1=isSametree(p->left,q->left);
        bool flag2=isSametree(p->right,q->right);
        return flag1&&flag2;
    }
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(!root||!subRoot) return false;
        if(isSametree(root,subRoot)) return true;
        bool flagroot=isSubtree(root->left,subRoot);
        bool flagsub=isSubtree(root->right,subRoot);
        return flagroot||flagsub;

    }
};
