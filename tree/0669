/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
//  //递归
// class Solution {
// public:
//     TreeNode* trimBST(TreeNode* root, int low, int high) {
//         if (root == nullptr) return nullptr;
//         if(root->val<low){
//             TreeNode* right=trimBST(root->right,low,high);
//             return right;
//         }
//         if(root->val>high){
//             TreeNode* left=trimBST(root->left,low,high);
//             return left;
//         }
//         root->left = trimBST(root->left, low, high);
//         root->right = trimBST(root->right, low, high);
//         return root;
//     }
// };
//迭代
class Solution {
public:
    TreeNode* trimBST(TreeNode* root, int low, int high) {
        if (root == nullptr) return nullptr;

        //将root移动到[low,high]区间内
        while(root&&(root->val<low||root->val>high)){
            if(root->val<low) root=root->right;
            else root=root->left;
        }

        //修剪左子树
        TreeNode* node=root;
        while(node){
            while(node->left&&node->left->val<low){
                node->left=node->left->right;
            }
            node=node->left;
        }

        node=root;

        //修剪右子树
        while(node){
            while(node->right&&node->right->val>high){
                node->right=node->right->left;
            }
            node=node->right;
        }
        
        return root;
    }
};
