/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 //迭代法
// class Solution {
// public:
//     int maxDepth(TreeNode* root) {
//         int depth=0;
//         queue<TreeNode*>qe;
//         if(root==NULL) return 0;
//         qe.push(root);
//         while(!qe.empty()){
//             int len=qe.size();
//             for(int i=0;i<len;i++){
//                 TreeNode* node=qe.front();
//                 qe.pop();
//                 if(node->left) qe.push(node->left);
//                 if(node->right) qe.push(node->right);
//             }
//             depth+=1;
//         }
//         return depth;
//     }
// };

//递归法
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(!root) return 0;
        return max(maxDepth(root->left),maxDepth(root->right))+1;
    }
};
