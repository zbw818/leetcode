/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
// class Solution {
// public:
//     void traversal(TreeNode* node, vector<int>&v){
//         if(node!=NULL){
//             traversal(node->left,v);
//             traversal(node->right,v);
//             v.push_back(node->val);
//         }
//     }
//     vector<int> postorderTraversal(TreeNode* root) {
//         vector<int>result;
//         traversal(root,result);
//         return result;
//     }
// };
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int>result;
        stack<TreeNode*>st;
        if(root==NULL) return result;
        st.push(root);
        while(!st.empty()){
            TreeNode* tem=st.top();
            st.pop();
            result.push_back(tem->val);
            if(tem->left) st.push(tem->left);
            if(tem->right) st.push(tem->right);
        }
        reverse(result.begin(),result.end());
        return result;
    }
};
