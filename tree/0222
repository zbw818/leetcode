/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
// //递归法
// class Solution {
// public:
//     int countNodes(TreeNode* root) {
//         int result=0;
//         if(!root) return 0;
//         result++;
//         int leftnum=countNodes(root->left);
//         int rightnum=countNodes(root->right);
//         return 1+leftnum+rightnum;
//     }
// };

//迭代法
class Solution {
public:
    int countNodes(TreeNode* root) {
        int result=0;
        queue<TreeNode*> qe;
        if(root) qe.push(root);
        while(!qe.empty()){
            int len=qe.size();
            for(int i=0;i<len;i++){
                TreeNode* node=qe.front();
                qe.pop();
                result++;
                if(node->left) qe.push(node->left);
                if(node->right) qe.push(node->right);
            }
        }
        return result;        
    }
};
