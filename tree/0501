/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> v;
    void traversal(TreeNode* root){
        if(!root) return;
        traversal(root->left);
        v.push_back(root->val);
        traversal(root->right);
    }
    vector<int> findMode(TreeNode* root) {
        v.clear();
        vector<int>result;
        traversal(root);
        unordered_map<int,int> um;
        for(auto num : v) um[num]++;
        int tem=INT_MIN;
        for(auto iter = um.begin(); iter != um.end(); iter++) tem=max(tem,iter->second);
        for(auto iter = um.begin(); iter != um.end(); iter++){
            if(iter->second== tem) result.push_back(iter->first);
        }
        return result;
    }
};
