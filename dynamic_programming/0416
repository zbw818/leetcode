class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int sum=0;
        for(auto num:nums) sum+=num;
        if(sum%2!=0) return false;
        int target=sum/2;

        /*1 <= nums.length <= 200,1 <= nums[i] <= 100
        元素和最大为20000，所以子集的和最大为10000。
        初始化dp长度为10001，dp[j]表示背包总容量是j，不超出最大容量j的总和为dp[j]*/
        vector<int>dp(10001,0);
        for(int i=0;i<nums.size();i++){
            for(int j=target;j>=nums[i];j--){
                dp[j]=max(dp[j],dp[j-nums[i]]+nums[i]);
            }
        }
        if(dp[target]==target) return true;
        return false;
    }
};
