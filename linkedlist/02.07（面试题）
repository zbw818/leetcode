/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode* curA=headA;
        ListNode* curB=headB;
        int lengA=0;int lengB=0;

        while(curA!=NULL){
            lengA++;
            curA=curA->next;
        }
        while(curB!=NULL){
            lengB++;
            curB=curB->next;
        }

        curA=headA;
        curB=headB;

        if(lengB>lengA){
            swap(lengA,lengB);
            swap(curA,curB);
        }
        int n=lengA-lengB;
        while(n--){
            curA=curA->next;
        }
        while(curA!=NULL){
            if(curA==curB){
                return curA;
            }
            curA=curA->next;
            curB=curB->next;
        }
        return NULL;             
    }
};
