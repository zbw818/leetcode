class Solution {
public:
    string removeDuplicates(string s) {
        stack<char>st;
        for(char ch : s){
            // if(ch==st.top()) st.pop(); //空栈不能使用top()
            // else st.push(ch);
            if(st.empty()||ch!=st.top()) st.push(ch);
            else st.pop();
        }
        string str="";
        while(!st.empty()){
            str+=st.top();
            st.pop();
        }
        reverse(str.begin(),str.end());
        return str;
    }
};

// class Solution {
// public:
//     string removeDuplicates(string s) {
//         vector<char>v;
//         for(char ch : s){
//             if(v.size()==0||ch!=v[v.size()-1]) v.push_back(ch);
//             else{
//                 v.resize(v.size()-1);
//             }
//         }
//         return string(v.begin(),v.end());
//     }
// };
